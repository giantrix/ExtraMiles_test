#pragma checksum "C:\Users\Bryant\source\repos\Xtramile-Test\Xtramile\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e02f4d4d3d4e11c442ace575278a9c4de3c90994"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Bryant\source\repos\Xtramile-Test\Xtramile\Views\_ViewImports.cshtml"
using Xtramile;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Bryant\source\repos\Xtramile-Test\Xtramile\Views\_ViewImports.cshtml"
using Xtramile.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e02f4d4d3d4e11c442ace575278a9c4de3c90994", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ad9f0c875042f484bc0664f1d06dfc2063ffa699", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<CountryModel>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Users\Bryant\source\repos\Xtramile-Test\Xtramile\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div>\r\n    <div class=\"text-center\">\r\n        <h1 class=\"display-4\">Welcome</h1>\r\n        <div class=\"search-div\">\r\n            <div>\r\n                <label class=\"lblName\">Country</label>\r\n                ");
#nullable restore
#line 12 "C:\Users\Bryant\source\repos\Xtramile-Test\Xtramile\Views\Home\Index.cshtml"
           Write(Html.DropDownList("ddlCountry", new SelectList(Model.Select(x => new { Value = x.Code, Text = x.Name }), "Value", "Text"), "--Select Country--", new { @required = "required" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </div>\r\n            <div>\r\n                <label class=\"lblName\">City</label>\r\n                ");
#nullable restore
#line 16 "C:\Users\Bryant\source\repos\Xtramile-Test\Xtramile\Views\Home\Index.cshtml"
           Write(Html.DropDownList("ddlCity", new SelectList(Model.Select(x => new { Value = x.Code, Text = x.Name }), "Value", "Text"), "--Select City--", new { @required = "required" }));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
            </div>
        </div>
    </div>
    <div class=""result-div"">
        <div>Result</div>
        <div class=""result-content"">


        </div>
    </div>
</div>

<style>
    .lblName {
        width: 100px;
    }

    .search-div {
        text-align: left;
    }
</style>

<script type=""text/javascript"">

    function temperatureConverter(valNum) {
        valNum = parseFloat(valNum);
        document.getElementById(""outputCelsius"").innerHTML = (valNum - 32) / 1.8;
    }
    $(document).ready(function () {
        $(""#ddlCountry"").change(function () {
            var dID = $(this).val();
            $.getJSON(""../Home/LoadCitiesByCountry"", { countryCode: dID },
                function (data) {
                    var select = $(""#ddlCity"");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: ""Select a City""
                    }));
                    $.each(d");
            WriteLiteral(@"ata, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.id,
                            text: itemData.city
                        }));
                    });
                });
        });


        $(""#ddlCity"").change(function () {

            var dID = $(""#ddlCity option:selected"").text();
            $.getJSON(""../Home/LoadCitiesDetail"", { cityName: dID },
                function (data) {
                    var select = $("".result-content"");
                    select.empty();
                    select.append('<div><label class=""lblResult"">Location</label><label class=""lblResults"">' + data.coord.lon + '-' + data.coord.lon + '</label></div>');
                    select.append('<div><label class=""lblResult"">Time</label><label class=""lblResults"">' + data.timezone + '-' + data.coord.lon + '</label></div>');
                    select.append('<div><label class=""lblResult"">Wind</label><label class=""lblResult");
            WriteLiteral(@"s"">speed: ' + data.wind.speed + '- deg: ' + data.wind.deg + '</label></div>');
                    select.append('<div><label class=""lblResult"">Visibility</label><label class=""lblResults"">' + data.visibility + '</label></div>');
                    select.append('<div><label class=""lblResult"">Sky conditions</label><label class=""lblResults"">' + data.weather[0].description + '</label></div>');
                    select.append('<div><label class=""lblResult"">Temperature (in Fahrenheit)</label><label class=""lblResults"">' + data.main.temp + '</label></div>');
                    select.append('<div><label class=""lblResult"">Temperature (in Celsius)</label><label class=""lblResults"" id=""outputCelsius""></label></div>');
                    select.append('<div><label class=""lblResult"">Relative Humidity</label><label class=""lblResults"">' + data.main.humidity + '</label></div>');
                    select.append('<div><label class=""lblResult"">Pressure</label><label class=""lblResults"">' + data.main.pressure + '</la");
            WriteLiteral("bel></div>\');\r\n\r\n                    temperatureConverter(data.main.temp);\r\n                });\r\n        });\r\n        \r\n    });\r\n\r\n</script>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<CountryModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
